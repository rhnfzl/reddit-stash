name: Build and Publish Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY_GHCR: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        include:
          - python-version: "3.12"
            is-default: true
            suffix: ""
          - python-version: "3.11"
            is-default: false
            suffix: "-py3.11"
          - python-version: "3.10"
            is-default: false
            suffix: "-py3.10"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && secrets.DOCKERHUB_USERNAME != ''
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (with Docker Hub)
        if: github.repository == 'rhnfzl/reddit-stash'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=${{ matrix.suffix }}
            type=ref,event=pr,suffix=${{ matrix.suffix }}
            type=semver,pattern={{version}},suffix=${{ matrix.suffix }}
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.suffix }}
            type=semver,pattern={{major}},suffix=${{ matrix.suffix }}
            type=raw,value=latest,enable={{is_default_branch}},suffix=${{ matrix.suffix }}
            type=raw,value=py${{ matrix.python-version }},enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,suffix=${{ matrix.suffix }}

      - name: Extract metadata (GHCR only)
        if: github.repository != 'rhnfzl/reddit-stash'
        id: meta-fork
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=${{ matrix.suffix }}
            type=ref,event=pr,suffix=${{ matrix.suffix }}
            type=semver,pattern={{version}},suffix=${{ matrix.suffix }}
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.suffix }}
            type=semver,pattern={{major}},suffix=${{ matrix.suffix }}
            type=raw,value=latest,enable={{is_default_branch}},suffix=${{ matrix.suffix }}
            type=raw,value=py${{ matrix.python-version }},enable={{is_default_branch}}
            type=sha,prefix={{branch}}-,suffix=${{ matrix.suffix }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ github.repository == 'rhnfzl/reddit-stash' && steps.meta.outputs.tags || steps.meta-fork.outputs.tags }}
          labels: ${{ github.repository == 'rhnfzl/reddit-stash' && steps.meta.outputs.labels || steps.meta-fork.outputs.labels }}
          cache-from: type=gha,scope=py${{ matrix.python-version }}
          cache-to: type=gha,mode=max,scope=py${{ matrix.python-version }}
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
            BUILD_DATE=${{ github.repository == 'rhnfzl/reddit-stash' && fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] || fromJSON(steps.meta-fork.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}

      - name: Generate artifact attestation
        if: github.event_name != 'pull_request'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true